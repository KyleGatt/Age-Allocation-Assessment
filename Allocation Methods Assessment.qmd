---
title: "Allocation Methods Assessment"
author: 
  - name: Kyle Gatt
    email: kyle.gatt@alaska.gov
    roles:
      - Lead investigator
    affiliations:
      - Alaska Department of Fish and Game
keywords:
  - Age allocation
  - Genetic stock identifaction
  - Upper Cook Inlet
  - Late-run Kenai River sockeye salmon
date: last-modified
theme: journal
format:
  html: 
    code-tools:
      source: https://github.com/KyleGatt/Age-Allocation-Assessment
editor: visual
embed-resources: true
engine: knitr
---

```{r, echo=F, include=F}
library(dplyr)
library(tidyr)
library(zoo)
library(scales)
library(forecast)
library(tseries)
library(TTR)
library(Metrics)
library(ggplot2)
library(purrr)
library(flextable)
library(DT)
library(lubridate)
library(TSrepr)
library(gghighlight)
library(tidyverse)


```

# Background

Stock allocation methods for commercially harvested sockeye salmon in Upper Cook Inlet (UCI) have varied over the years. From 1976 to 1998, scale pattern analysis was the primary stock allocation method but proved unreliable. In 1999, a weighted age allocation model was introduced (see Tobias and Willette 2013 for details) but later replaced in 2005 with genetic stock identification (GSI). The age allocation model remains the primary source for inseason (July to January) stock-specific harvest estimates but are replaced with GSI estimates for brood table development. Late-run Kenai River sockeye salmon estimates derived from the age allocation model are used inseason to inform the Kenai River sockeye salmon inriver goal under 5 AAC 21.360 of the *Kenai River Late-Run Sockeye Salmon Management Plan*.

Performance of the age allocation model has not been readily tracked over time since its initial development. Though the model has proven as a valuable tool for generating inseason stock-specific harvest estimates, this approach requires large sample sizes and time sensitive age composition data. Due to funding and staffing challenges, alternative methods of inseason stock apportionment need to be explored. Thus, objective of this analysis is to three fold:

1.  *Assess the performance of the age allocation model for generating inseason stock-specific harvest estimates.*
2.  *Explore alternative methods to the age allocation model that utilize historical GSI data for generating inseason stock-specific harvest estimates.*
3.  *Assess the performance of alternative stock allocation methods for the inseason run-tier assessment of late-run Kenai River sockeye salmon.*

# Methods

### Age Allocation Data

In general, the age allocation model uses the relative contribution of an age class in a stock's escapement to represent the relative contribution of that age class in the commercial harvest for a specific time and area (fishery strata) fished. Each fishery has an assumed stock composition to represent the overall harvest which is based on a stock's proximity to a fishery (@tbl-stat). Timely inseason age composition data from both the commercial harvests and escapements are required to inform the model. However, since the model's initial development several of the primary stock assessment projects that contributed age composition data of escapements are no longer operational. Several stop gaps have been developed over the years to continue running the model. For example, the Susitna and Fish Creek stocks rely on pre-season forecasts of age compositions to these systems for allocation. Additionally, the Crescent River stock uses the age composition of the Westside harvest.

Although the age allocation model has been used to generate stock-specific harvest estimates in Upper Cook Inlet since 1999, stock- and fishery-specific results were only available for years spanning 2017 to 2024 for this analysis. Additionally, the age allocation model analysis was performed in excel and only provided point estimates for each day the analysis was run in a given year.

```{r, echo=F, message=FALSE, warning=F}
#| label: tbl-stat
#| tbl-cap: Assumed stock composition of for each harvest group in the age allocation model.


# Import Age Allocation Results 
AgeAllocation<-read.csv(file("Data/AgeAllocationPerformance.csv"))   

AgeAllocation%>%filter(Allocation>0)%>%
  group_by(Fishery)%>%summarize(Stock=unique(Stock))%>%   
  group_by(Fishery)%>%summarize(Stock=paste(Stock, collapse = ", "))%>%   
  flextable()%>%   theme_apa()%>%   
  line_spacing(space = 1,part = "all")%>%   
  align(j=1,align="left", part = "all")%>%   
  align(j=2,align="left", part = "all")%>%   
  set_header_labels(values = c("Area Strata", "Stock"))%>%   
  fix_border_issues()%>%   autofit()

```

### Genetic Stock Identification Data

Fishery-specific genetic stock identification estimates spanning 2005 to 2024 were complied from various reports (Barclay, A. W., 2020; Barclay and Chenoweth 2021; Barclay 2024; A. W. Barclay, Fishery Biologist, Alaska Department of Fish and Game, Anchorage, personal communication) into a centralized dataframe for further analysis. The fisheries sampled for GSI analyses have varied over the time series but have generally consisted of four major strata including: Central District Drift, Central District Set Gillnet (ESSN), Northern District, and Westside (@fig-GSI). When applicable, the average of corridors only and non-corridor GSI estimates were used to represent the Central Distrct Drift area strata to ensure comparability with age allocation model results (the age allocation model does not treat these fisheries independently). Furthermore, the average of Kalgin Island and Westside GSI estimates were used to represent the Westside area strata because these fisheries are often reported as an aggregate due to low sample sizes and the inability to ensure pure mixtures among these fisheries. Primary stocks represented in GSI analyses include Kenai, Kasilof, Crescent, Susitna rivers, Fish Creek, West Cook Inlet (West), and Knik/Turnagain/Northeast Cook Inlet (KTNE). Genetic stock identification estimates for the West and KTNE reporting groups were aggregated to represent "other" stocks in comparative analyses with age allocation model results.

```{r, echo=F, message=F}
GSI<-read.csv(file("Data/GSI.Aggregated.csv"))%>%
  mutate(Stock=ifelse(Stock%in%"KTNE" | Stock%in%"West","Other",Stock))%>%
  group_by(Year, Fishery,Stock)%>%summarize(Comp=sum(Comp))
```

```{r, echo=F, message=FALSE, warning=F}
#| label: fig-GSI
#| fig-cap: Historical GSI estimates for primary sampled fisheries, 2005 to 2024.

GSI%>%
  ggplot()+
  geom_bar(aes(Year,round(Comp,digits=5),fill=Stock),stat="identity")+
  facet_grid(Fishery~.)+
  theme_bw()+
  ylab("Proportion of harvest")+
  xlab("")+
  theme(text = element_text(family = "serif")) 

```

### Commercial Harvest Data

Harvest data was exported from OceanAk's Statewide Salmon Fishticket database as annual totals of sockeye salmon harvest by statistical area using the following filters: Management Unit Code == "UCI", Harvest Code /= "21; 22 ;23 ;24; 41; 42; 43", Species Code == 420, Batch year is between 2005 and 2024. Annual totals were then assigned to fishery strata based on statistical area and gear code (@tbl-Fisherystatareas). Once assigned to a fishery, statistical area harvest totals were summed by year for fishery specific annual grand totals (@fig-Fisherytotals).

```{r, echo=F, message=FALSE, warning=F}
#| label: tbl-Fisherystatareas
#| tbl-cap: Statistical areas included within each fishery stratum.

Harvest<-read.csv(file("Data/Upper Cook Inlet Historical Harvest.csv"))%>%rename("Year"=Batch.Year)%>%
  mutate(Fishery=ifelse(Stat.Area%in%c(24741,24742,24743,24710,24720,24730,24790,24780,24770),"Northern District",
                               ifelse(Stat.Area%in%c(24510,24520,24530,24540,24550,24555,24560,24610,24620)&Gear.Code==4,"Westside",
                                             ifelse(Stat.Area%in%c(24442,24441,24432,24431,24422,24421),"ESSN",
                                                                  ifelse(Gear.Code==3,"Central District Drift","Error")))))%>%
  filter(!Fishery%in%"Error")

# SummarizeHarvest dat
Harvest.Sum<-Harvest%>%group_by(Year,Fishery)%>%summarize(Harvest=sum(Number.Of.Animals..sum.))


Harvest%>%group_by(Fishery)%>%summarize(Stat.Area=as.factor(unique(Stat.Area)))%>%
  group_by(Fishery)%>%summarize(Stat.Area=paste(Stat.Area, collapse = ", "))%>%
  flextable()%>%
  theme_apa()%>%
  line_spacing(space = 1,part = "all")%>%
  align(j=1,align="left", part = "all")%>%
  align(j=2,align="left", part = "all")%>%
  set_header_labels(values = c("Fishery Strata", "Statistical area"))%>%
  fix_border_issues()%>%
  autofit()
```

```{r, echo=F, message=FALSE, warning=F}
#| label: fig-Fisherytotals
#| fig-cap: Harvest totals by fishery strata, 2005 to 2024.

Harvest.Sum%>%
  ggplot()+
  geom_bar(aes(Year,Harvest, fill=Fishery), stat="identity")+
  theme_bw()+
  scale_y_continuous(labels = comma, expand = c(0, 0))+
  labs(fill='Fishery strata')+
  ylab("Total Harvest")+
  xlab("")+

  theme(text = element_text(family = "serif")) 

```

### Data Analysis

Age allocation model performance was assessed for each stock across all fisheries and years using coefficient of variation (CV) between GSI and age allocation stock compositions. Coefficient of variation was chosen over other metrics as to ensure a meaningful zero value for fisheries in which the age allocation model did not assume the full compliment of stock composition. Prior to estimating CV values, GSI and harvest datasets were truncated to years spanning 2017 to 2024 to ensure comparable results among methods. Genetic stock identification estimates for each harvest year were assumed to be the true stock composition of commercial harvests for all analyses reported here.

A GSI allocation method was evaluated using a hindcasting approach based on historical, fishery-specific GSI data. Realized stock compositions for each fishery were lagged by one year and modeled using 3-, 5-, and 10-year rolling averages as well as exponential smoothing techniques. These simulated stock compositions were then applied to commercial harvest data by year and fishery to produce “in-season” stock-specific harvest estimates. To assess the performance of each simulation method, coefficient of variation (CV) was calculated between simulated and realized stock-specific harvest estimates, stratified by year, stock, and fishery. The simulation method yielding the lowest average CV over the previous three years was selected as the optimal model for each year-stock-fishery combination. Finally, stock-specific harvest estimates from optimal models were summed across all fisheries to produce annual stock-specific harvest estimates.

An inseason tier-status assessment is conducted annually for the late-run Kenai River sockeye salmon stock. This assessment provides a projected total run estimate, which informs the tier under which the Alaska Department of Fish and Game (ADF&G) manages the commercial fisheries for the remainder of the season. The tiers are defined based on total run size: a lower tier corresponds to fewer than 2.3 million fish, a middle tier to a run between 2.3 and 4.6 million fish, and an upper tier to a run exceeding 4.6 million fish. Although the exact date of the tier-status assessment has varied somewhat over the years, it is typically performed around July 20. Historically, projections for this assessment relied on cumulative catch-per-unit-effort (CPUE) timing curves from the Offshore Test Fishery (OTF). In 2024, however, the methodology was updated to use inriver run timing curves from the RM 19 sonar project combined with a weighted model selection approach. These changes improved the reliability of total run projections within the scope of tier thresholds, according to internal evaluation (personal communcation, Kyle Gatt, Fishery Biologist 4 at ADF&G). Because of inconsistent projection methods, this report will only focus on the 2024 inseason run tier-assessment.

To evaluate the performance of age- and GSI-based allocation methods for this application, inriver run timing models spanning the years 2000 to 2023 were used to project the total run of sockeye salmon to the Kenai River under each method. Model performance was assessed using the Mean Arctangent Absolute Percentage Error (MAAPE), which compared projected daily total run estimates to actual run values, derived from each allocation method, up to the date of the projection. The top three run-timing models with the lowest MAAPE were selected for each allocation method and a weighted hybrid model approach was applied. Model weights were assigned based on the running MAAPE of each selected model, with a lower MAAPE receiving a greater weight towards the final projection estimate. Final projection estimates were then compared among allocation methods through the context management actions.

# Results

### Age Allocation Performance

```{r, echo=F, message=FALSE, warning=F, include=F}
GSI%>%left_join(AgeAllocation)%>%left_join(Harvest.Sum)%>%
  mutate(True.Harvest=Comp*Harvest)%>%
  filter(Year>2016)%>%
  filter(!Comp%in%NA)%>%
  select(1:3,Allocation,True.Harvest)%>%
  rowwise()%>%
  mutate(SD=sd(Allocation:True.Harvest),
         Mean=mean(Allocation:True.Harvest),
         CV=(SD/Mean)*100)%>%
  select(Year,Fishery,Stock,CV)%>%
  group_by(Fishery)%>%
  summarize(CV=mean(CV,na.rm=T))


GSI%>%left_join(AgeAllocation)%>%left_join(Harvest.Sum)%>%
  mutate(True.Harvest=Comp*Harvest)%>%
  filter(Year>2016)%>%
  filter(!Comp%in%NA)%>%
  mutate(Diff=abs(Allocation-True.Harvest))%>%
  group_by(Stock)%>%
  summarize(Mean=mean(Diff), min=min(Diff), max=max(Diff))

```

```{r, echo=F, message=FALSE, warning=F, include=F}

By.Stock.Fishery<-GSI%>%left_join(AgeAllocation)%>%left_join(Harvest.Sum)%>%
  mutate(True.Harvest=Comp*Harvest)%>%
  filter(Year>2016)%>%
  filter(!Comp%in%NA)%>%
  select(1:3,Allocation,True.Harvest)%>%
  rowwise()%>%
  mutate(SD=sd(Allocation:True.Harvest),
         Mean=mean(Allocation:True.Harvest),
         CV=(SD/Mean)*100)%>%
  select(Fishery,Stock,CV)%>%
  group_by(Stock, Fishery)%>%
  summarize(CV=mean(CV, na.rm = T))
  
  
TablePrecision<-By.Stock.Fishery%>%
  rbind(GSI%>%left_join(AgeAllocation)%>%left_join(Harvest.Sum)%>%
  mutate(True.Harvest=Comp*Harvest)%>%
  filter(Year>2016)%>%
  filter(!Comp%in%NA)%>%
  select(1:3,Allocation,True.Harvest)%>%
  rowwise()%>%
  mutate(SD=sd(Allocation:True.Harvest),
         Mean=mean(Allocation:True.Harvest),
         CV=(SD/Mean)*100)%>%
  select(Fishery,Stock,CV)%>%
  group_by(Fishery)%>%
  summarize(CV=mean(CV, na.rm = T))%>%
  mutate(Stock="Fishery Average"),
  
  GSI%>%left_join(AgeAllocation)%>%left_join(Harvest.Sum)%>%
  mutate(True.Harvest=Comp*Harvest)%>%
  filter(Year>2016)%>%
  filter(!Comp%in%NA)%>%
  select(1:3,Allocation,True.Harvest)%>%
  rowwise()%>%
  mutate(SD=sd(Allocation:True.Harvest),
         Mean=mean(Allocation:True.Harvest),
         CV=(SD/Mean)*100)%>%
  select(Fishery,Stock,CV)%>%
  group_by(Stock)%>%
  summarize(CV=mean(CV, na.rm = T))%>%mutate(Fishery="Stock Average"))%>%
  
  pivot_wider(values_from = CV, names_from=Fishery)%>%
  flextable()%>%
  theme_apa()%>%
  line_spacing(space = 1)%>%
  hline(i=6)%>%
  autofit()
 
```

Since 2017, the age allocation method has achieved an average CV score of 28 across all fisheries, stocks, and years. Precision was highest for the Susitna (CV =22) and Other (CV =23) stocks but lowest for the Crescent (CV=45), Kasilof (CV = 29) and Fish Creek (CV = 29) stocks. The Central District Drift (CV =19) and Westside fisheries (CV =27) achieved the highest average precision. The age allocation method has had an average absolute error in estimating the commercial harvest of Kenai and Kasilof stocks of 41,900 and 35,800 fish respectively.

```{r, echo=F, message=FALSE, warning=F}
#| label: tbl-AgePrecision
#| tbl-cap: Average precision, measured by coefficient of variation, between the true stock-specific harvest estimates and those generated with age allocation methods for each stock and fishery, 2017 to 2024.

TablePrecision


```

### Post-Season GSI Allocation Method Performance

The GSI allocation method produced generally similar post-season stock specific harvest estimates as the age allocation method for most stocks and years (@fig-AgevsGSI). Precision of stock-specific harvest estimates across all fisheries and stocks were not statistically different among allocation methods (p\>0.05) (@tbl-Precisionbymethod).

```{r, echo=F, message=FALSE, warning=F,include=F}

Allocation.Summary<-GSI%>%left_join(AgeAllocation)%>%left_join(Harvest.Sum)%>%
  mutate(True.Harvest=Comp*Harvest)%>%
  filter(Year>2016)%>%
  filter(!Comp%in%NA)%>%
  select(1:3,Allocation,True.Harvest)%>%
  rowwise()%>%
  mutate(SD=sd(Allocation:True.Harvest),
         Mean=mean(Allocation:True.Harvest),
         CV=(SD/Mean)*100)%>%
  rename("Total"=Allocation)%>%
  mutate(Method="Age Allocation")




GSIMeans<-GSI%>%group_by(Fishery,Stock)%>%
  mutate(Lagged=lag(Comp,1),
    Roll3=rollmean(Lagged,k=3, fill=NA, na.rm=T, align="right"),
         Roll5=rollmean(Lagged,k=5, fill=NA, na.rm=T, align="right"),
         Roll10=rollmean(Lagged,k=10, fill=NA, na.rm=T, align="right"))%>%
  group_by(Fishery, Stock)%>%
  fill(c(Roll3,Roll5,Roll10),.direction = "down")%>%
  left_join(Harvest.Sum)%>%
  mutate(Harvest=ifelse(Harvest%in%NA,0,Harvest))%>%
  mutate(True.Harvest=Comp*Harvest,
         RollHarvest3=Roll3*Harvest,
         RollHarvest5=Roll5*Harvest,
         RollHarvest10=Roll10*Harvest)

################################################################################
# Using an exponential smoothing approach with varying window widths
  
GSIEXPO<-GSI%>%group_by(Stock, Fishery)%>%
  mutate(Lagged=lag(Comp, 1))%>%
  filter(!Lagged%in%NA)%>%
  group_by(Stock, Fishery)%>%
  mutate(Smoothed3=EMA(Lagged, n=3),
         Smoothed5=EMA(Lagged, n=5),
         Smoothed10=EMA(Lagged, n=10))%>%
  left_join(Harvest.Sum)%>%
  mutate(Harvest=ifelse(Harvest%in%NA,0,Harvest))%>%
  mutate(True.Harvest=Comp*Harvest,
        Smoothed3Harvest=Smoothed3*Harvest,
         Smoothed5Harvest=Smoothed5*Harvest,
         Smoothed10Harvest=Smoothed10*Harvest)

# Aggregating everything 

MethodsAgg<-rbind(GSIMeans%>%select(1:3,10:13)%>%rename("Roll 3"=RollHarvest3, "Roll 5"=RollHarvest5,"Roll 10"=RollHarvest10)%>%pivot_longer(5:7,names_to = "Method",values_to = "Total"),
                  GSIEXPO%>%select(1:3,10:13)%>%rename("Exp 3"=Smoothed3Harvest, "Expo 5"=Smoothed5Harvest,"Expo 10"=Smoothed10Harvest)%>%pivot_longer(5:7,names_to = "Method",values_to = "Total"))%>%
  
  select(Year, Fishery, Stock, Method, True.Harvest, Total)%>%
  
  ungroup()%>%
  mutate(Mean=rowMeans(across(c(True.Harvest,Total))))%>% ## Estimating precision
  rowwise()%>%
  mutate(SD=sd(c_across(c(True.Harvest,Total))), CV=(SD/Mean))%>%
  filter(!CV%in%NA)%>%
  
  group_by(Stock,Fishery,Method)%>%# Lagging to get prior performance for selections
  mutate(LagCV=lag(CV,n=1))%>%
  
  
  group_by(Stock, Fishery, Method)%>% # Down filling recent performance
  fill(LagCV, .direction = "down")%>%
  
  group_by(Stock, Fishery, Method)%>%
  mutate(CVRoll=rollmean(LagCV, k=3, fill=NA, align = "right", na.rm=T))%>%# Select the lowest average CV over the last three years
  
  group_by(Stock, Fishery, Method)%>%
  fill(CVRoll, .direction = "down")%>%
  filter(!CVRoll%in%NA)%>%
  
  arrange(Year, Fishery, Stock, Method)%>%
  group_by(Year, Stock, Fishery)%>%
  mutate(Selected=ifelse(CVRoll==min(CVRoll,na.exclude=T),"Selected","Not Selected"))



```

```{r, echo=F, message=FALSE, warning=F,fig.height=10}
#| label: fig-AgevsGSI
#| fig-cap: Stock-specific commercial harvest estimates by stock, year, and allocation method. The grey bars represent realized stock-specific harvest estimates using post-season GSI estimates. The blue dots represent simulated stock-specific harvest estimates using the inseason GSI allocation method. The shaded region represents the time frame for which age allocation model results are available.


MethodsAgg%>%select(Year:Total,Selected)%>%
  filter(Selected%in%"Selected")%>%group_by(Year, Stock)%>%summarize(EstimatedHarvest=sum(Total), TrueHarvest=sum(unique(True.Harvest)))%>%mutate(Method="GSI Allocation")%>%
  rbind(AgeAllocation%>%group_by(Year, Stock)%>%summarize(EstimatedHarvest=sum(Allocation, na.rm=T), Method="Age Allocation", Total=NA))%>%
  
  ggplot()+
  geom_bar(aes(Year, TrueHarvest),stat="identity")+
  geom_point(aes(Year, EstimatedHarvest, color=Method), size=3)+
  facet_grid(Stock~.,scales="free")+
  theme_bw()+
   scale_y_continuous(labels = comma)+
  xlab("")+
  ylab("Harvest")+
  theme(text = element_text(family = "serif"))+
  annotate(geom = 'rect', xmin = 2016.5, xmax = 2025, ymin= 0, ymax= Inf,
               fill = 'grey20', alpha = 0.1)


```

::: {style="margin-bottom:20px;"}
:::

```{r, echo=F, message=FALSE, warning=F}
#| label: tbl-Precisionbymethod
#| tbl-cap: Average precision, measured by coefficient of variation between annual stock-specific harvest estimates generated with GSI and age allocation methods relative to actual stock-specific harvest estimates, across all fisheries and stocks, 2017 to 2024. The mean absolute difference across all fisheries for each stock and allocation method is indicated in the "Difference" column.


MethodsAgg%>%select(Year:Total,Selected)%>%
  filter(Selected%in%"Selected")%>%group_by(Year, Stock)%>%summarize(EstimatedHarvest=sum(Total), TrueHarvest=sum(unique(True.Harvest)))%>%mutate(Method="GSI Allocation")%>%
  rbind(AgeAllocation%>%group_by(Year, Stock)%>%summarize(EstimatedHarvest=sum(Allocation, na.rm=T), Method="Age Allocation"))%>%
  filter(Year>2016)%>%
  group_by(Year, Stock)%>%
  fill(TrueHarvest,.direction = "down")%>%
  ungroup()%>%
  mutate(Mean=rowMeans(across(c(EstimatedHarvest,TrueHarvest))))%>% ## Estimating precision
  rowwise()%>%
  mutate(SD=sd(c_across(c(EstimatedHarvest,TrueHarvest))), CV=(SD/Mean), Difference=abs(TrueHarvest-EstimatedHarvest))%>%
  group_by(Stock, Method)%>%summarize(CV=mean(CV), Difference=mean(Difference))%>%
  flextable()%>%
  theme_apa()%>%
  merge_v(j=1)%>%
  valign(j=1:2,valign = "top")%>%
  line_spacing()%>%
  autofit()

Test<-MethodsAgg%>%select(Year:Total,Selected)%>%
  filter(Selected%in%"Selected")%>%group_by(Year, Stock)%>%summarize(EstimatedHarvest=sum(Total), TrueHarvest=sum(unique(True.Harvest)))%>%mutate(Method="GSI Allocation")%>%
  rbind(AgeAllocation%>%group_by(Year, Stock)%>%summarize(EstimatedHarvest=sum(Allocation, na.rm=T), Method="Age Allocation"))%>%
  filter(Year>2016)%>%
  group_by(Year, Stock)%>%
  fill(TrueHarvest,.direction = "down")%>%
  ungroup()%>%
  mutate(Mean=rowMeans(across(c(EstimatedHarvest,TrueHarvest))))%>% ## Estimating precision
  rowwise()%>%
  mutate(SD=sd(c_across(c(EstimatedHarvest,TrueHarvest))), CV=(SD/Mean), Difference=abs(TrueHarvest-EstimatedHarvest))

```

### Inseason Run Tier Assessment Performance

The GSI allocation method overestimated the total run of late-run Kenai River sockeye salmon relative to the age allocation method prior to the projection date of July 23, 2024 (@fig-Actualtiming).

```{r, echo=F, message=FALSE, warning=F, include=F}
# Importing Timing Data
Sonar<-read.csv(file("Data/KeKa_Hist_Sonar.csv"))%>%
  mutate(Date=as.Date(Date, format="%m/%d"))%>%
  mutate(Day=day(Date), Month=month(Date))%>%
 mutate(Date=make_date(Year, day=Day, month=Month))%>%
  filter(River%in%"Kenai")

Timing<-Sonar%>%
  filter(Year>=2000)%>%
  group_by(River,Year)%>%
  mutate(Timing=cumsum(Daily.Count)/max(cumsum(Daily.Count)),
                                Date=as.Date(Date,format="%d-%b"))%>%
  select(-Daily.Count)%>%
  group_by(River)%>%
  complete(Year,Date)%>%
  group_by(River,Year)%>%
  fill(Timing,.direction = "updown")%>%
  rename(Stock=River)%>%
  mutate(Date=make_date(year=2024, day=Day, month=Month))%>%
  select(-c(Day, Month, Stock))


#Importing unallocated total run Tracking estimates
TRUnallocated<-read.csv(file("Data/TotalRunUnallocated.csv"))%>%
  filter(!Fishery.Project%in%c("Crescent Escapement", "Fish Creek Escapement","Kasilof River Escapement", "Susitna Escapement", "Kasilof Personal Use Gillnet", "Other", "Fish Creek Personal Use", "Kasilof Personal Use Dipnet","Kasilof Sport"))%>%
  mutate(Fishery.Project=ifelse(Fishery.Project%in%c("Central District Drift - State Waters","UCI EEZ" ),"Central District Drift",
         ifelse(Fishery.Project%in%c("Northern District Set Net Fishery - Eastern Subdistrict","Northern District Set Net Fishery - General Subdistrict"),"Northern District",
                ifelse(Fishery.Project%in%c("Kasilof Section Set Net Fishery","Kenai Section Set Net Fishery"),"ESSN",
                       ifelse(Fishery.Project%in%"Western Subdistrict Set Net Fishery","Westside",Fishery.Project)))))

# Reformatting GSI Data
ROLL<-GSIMeans%>%filter(Year==2024)%>%select(Fishery,Stock,Roll3,Roll5,Roll10)%>%filter(Stock%in%"Kenai")%>%rename("Fishery.Project"=Fishery)%>%ungroup()%>%select(-Stock)%>%
  pivot_longer(2:4,values_to = "Composition",names_to = "Method")

EXP<-GSIEXPO%>%filter(Year==2024)%>%select(Fishery,Stock,Smoothed3,Smoothed5,Smoothed10)%>%filter(Stock%in%"Kenai")%>%rename("Fishery.Project"=Fishery)%>%ungroup()%>%select(-Stock)%>%
  pivot_longer(2:4,values_to = "Composition",names_to = "Method")

Methods<-rbind(ROLL,EXP)

Comps<-MethodsAgg%>%filter(Year==2024 & Selected%in%"Selected" & Stock%in%"Kenai")%>%ungroup()%>%select(Fishery,Method)%>%rename("Fishery.Project"=Fishery)%>%
  mutate(Method=recode(Method,"Roll 3"="Roll3", 
                                          "Roll 5"="Roll5", 
                                           "Roll 10"="Roll10", 
                                           "Expo 3" ="Smoothed3", 
                                           "Expo 5" ="Smoothed5",
                                           "Expo 10" ="Smoothed10"))%>%
  left_join(Methods) 


# Apply stock comps of Kenai fish to commercial harvest but only after July 1
CommTR<-TRUnallocated%>%filter(Fate%in%"Commercial Harvest")%>%
  left_join(Comps)%>%
  mutate(Date=as.Date(Date,format="%m/%d/%Y"))%>%
  
  #mutate(Condition=ifelse(Date<as.Date("2024-07-20",format="%Y-%m-%d"),"yes","no"))%>%
  #mutate(Composition=ifelse(Condition%in%"yes",Composition*.6,Composition))%>%
  
  mutate(Season.Total=Season.Total*Composition)%>%
  group_by(Date)%>%summarize(Total=sum(Season.Total,na.rm=T))%>%
  mutate(Fate="Commercial Harvest")

ALt.TR<-CommTR%>%select(-c(Total,Fate))%>%left_join(
TRUnallocated%>%mutate(Date=as.Date(Date,format="%m/%d/%Y"))%>%filter(!Fate%in%"Commercial Harvest")%>%group_by(Date)%>%summarize(Total=sum(Season.Total))%>%mutate(Fate="Other"))%>%
  rbind(CommTR)%>%group_by(Date)%>%summarize(Total=sum(Total))%>%mutate(Method="GSI Allocation")
  

# Bind to age allocation results
Inseason.Results<-read.csv(file("Data/Final.Inseason.Results.csv"))%>%filter(Stock%in%"Kenai")%>%group_by(Date)%>%summarize(Total=sum(UCI.Total))%>%mutate(Method="Age Allocation")%>%mutate(Date=as.Date(Date,format="%Y-%m-%d"))


Combined<-rbind(ALt.TR,Inseason.Results)

# Running projections
Test.1<-Timing%>%
  left_join(Combined)%>%
              mutate(Projection=Total/Timing)%>% #generating daily projection estimates
  filter(Date%in%"2024-07-23")%>% #Filtering to projection date
  ungroup()%>%
  select(Year, Method, Projection)%>%
  left_join(Timing)%>% #combining timing data to estimate daily total run estimates
  ungroup()%>%
  mutate(Daily=Timing*Projection)


Test.2<-Test.1%>%
  filter(Date<=as.Date("2024-07-23", format="%Y-%m-%d"))%>%# Filter to the projection date
  left_join(Combined)%>%# Combining true counts
  group_by(Method,Year)%>%summarize(MAAPE=mean(maape(Total,Daily)))%>%
  group_by(Method)%>%slice_min(order_by=MAAPE,n=3)%>%select(Method,Year,MAAPE)


```

```{r, echo=F, message=FALSE, warning=F}
#| label: fig-Actualtiming
#| fig-cap: Daily total run estimates for late-run Kenai River stock sockeye salmon by stock apportionment method, 2024.

Combined%>%
  filter(Date<as.Date("2024-07-24", format="%Y-%m-%d"))%>%
  ggplot()+
  geom_line(aes(Date,Total, color=Method), size=1, alpha=.5)+
  scale_y_continuous(label=comma)+
  theme_bw()+
  ylab("Total run")+
  theme(text = element_text(family = "serif"))

```

::: {style="margin-bottom:20px;"}
:::

The age allocation model projected a total run of 3.59 million sockeye salmon to the Kenai River, which would have maintained the forecasted middle-tier status (2.3 to 4.6 million) (@tbl-Selectedtiming). The GSI allocation method projected a much larger total run of 5.23 million fish, which would have resulted in an upper-tier status change (@tbl-Selectedtiming). The realized total run for late-run Kenai River sockeye salmon in 2024 was 3.77 million fish.

```{r, echo=F, message=FALSE, warning=F}
#| label: tbl-Selectedtiming
#| tbl-cap: Top selected run timing models used the inseason run tier assessment by allocation method, 2024.


Test.2%>%
  left_join(Test.1%>%filter(Date%in%"2024-07-23")%>%select(Method,Year,Projection))%>%
  mutate(Inv.Weight=1/MAAPE)%>%group_by(Method)%>%
  mutate(Weight=Inv.Weight/sum(Inv.Weight),Weighted.Projection=Projection*Weight,Total=sum(Weighted.Projection))%>%
  select(-Inv.Weight)%>%
  mutate(Year=as.factor(Year))%>%
  flextable()%>%
  line_spacing(space = 1)%>%
  theme_apa()%>%
  merge_v(j=c(1,7))%>%
  valign(valign = "top", j=1)%>%
  valign(valign = "bottom", j=7)%>%
  hline(i=3)%>%
  set_header_labels(Weighted.Projection="Weighted Projection")%>%
   line_spacing(space=1)%>%
  autofit()



```

::: {style="margin-bottom:20px;"}
:::

```{r, echo=F, message=FALSE, warning=F, fig.height=8}
#| label: fig-ProjectionPlot
#| fig-cap: Projected cumulative total run estimates for the top three selected run timing models (black lines) for each stock allocation method relative to the observed cumulative total run estimated derived from each allocation method.

Test.1%>%
  left_join(Test.2%>%mutate(Select=Year))%>%
  left_join(Combined%>%
              filter(Date<as.Date("2024-07-23", format="%Y-%m-%d")))%>%# Combining true counts
  ggplot()+
  geom_line(aes(Date,Daily,group=Year),size=1.5)+
  facet_grid(Method~.,scales = "free")+
  gghighlight(Year==Select ,calculate_per_facet = TRUE, use_direct_label = FALSE,
              unhighlighted_params = list(linewidth = 1, colour = alpha("grey", 0.7)))+
  geom_line(aes(Date,Total),color=2,size=1.5)+
  theme_bw()+
  scale_y_continuous(label=comma)+
  ylab("Total Run Size")+
  theme(text = element_text(family = "serif"))


```

# Recommendations

Overall, the age allocation model performed relatively well at estimating stock-specific harvest estimates. This was especially the case for the Kenai stock. However, the age allocation model struggled to allocate less represented stocks as this approach cannot assume the full compliment of stock compositions.

On average, GSI allocation method yielded similar post-season stock-specific harvest estimates as the age allocation method. Precision of stock-specific harvest estimates were also similar among allocation methods, but were marginally less precise for the Kenai and Kasilof stocks.

The GSI allocation method projected a significantly larger total run than the age allocation model and, if used in-season during 2024, would have resulted in a mid-season tier designation change. This outcome was somewhat expected, as the current GSI approach assumes a static stock composition within each fishery. Such a static assumption tends to overestimate Kenai River contributions early in the season—prior to the stock's peak run timing—leading to inflated total run projections.

The GSI allocation method presented here is a broad-stroke approach that relies on aggregated annual GSI estimates and does not account for temporal variation in stock composition. To address this limitation, we incorporated a simplified temporal adjustment into the model by assuming a 50% reduction in the Kenai contribution across all fisheries prior to July 20th. With this adjustment, the GSI allocation method yields a total run estimate more closely aligned with the age allocation model and is comparable to the observed total run (@fig-Temporalcurve, @fig-Temporalselect, @tbl-Temporaltable). This correction is supported by 2023 GSI data from the Central District Drift harvest, which showed the average Kenai contribution to corridor-only harvests increased from approximately 38% before July 20th to over 72% after July 20th.

**Overall, adopting the GSI allocation approach offers several key advantages.** **It produces final total run estimates comparable to those derived from the age allocation model, is significantly simpler to implement, and reduces reliance on timely in-season age composition data. This, in turn, enables reallocation of resources toward other critical sampling efforts (e.g., Northern District North or Coho sampling). However, further refinements are necessary before full-scale implementation can proceed. The following next steps are recommended to support this transition:**

-   **Seek biometric support to refine and enhance GSI-based modeling techniques.**

-   **Develop a comprehensive GSI database using raw, non-aggregated genetic stock identification data.**

-   **Improve allocation resolution by apportioning GSI data to statistical areas rather than broad, aggregated regions. This will help capture differences between corridor and non-corridor periods and account for variability in run timing across districts.**

-   **Design catch and escapement sampling goals that maximize temporal resolution for GSI data collection.**

# References

Barclay, A. W. 2020. Compilation (2005–2019) of genetic stock identification estimates of sockeye salmon harvest from sampled Upper Cook Inlet commercial fisheries; Susitna River components reported both separately and combined. Alaska Department of Fish and Game, Division of Commercial Fisheries, Regional Information Report 5J20-02, Anchorage.

Barclay, A. W., and E. L. Chenoweth. 2021. Genetic stock identification of Upper Cook Inlet sockeye salmon harvest, 2020. Alaska Department of Fish and Game, Division of Commercial Fisheries, Regional Information Report No. 5J21-04, Anchorage.

Barclay, A. W. 2024. Genetic stock composition estimates for the Upper Cook Inlet sockeye salmon commercial fishery, 2021–2023. Alaska Department of Fish and Game, Division of Commercial Fisheries, Regional Information Report No. 5J24-02, Anchorage.

Tobias T. M., and T. M. Willette. 2013. An estimate of total return of sockeye salmon to Upper Cook Inlet. Alaska, 1976–2008. Alaska Department of Fish and Game, Division of Commercial Fisheries, Regional Information Report 2A13-02, Anchorage.

# Appendices

```{r, echo=F, message=FALSE, warning=F}
#| label: tbl-Data
#| tbl-cap: Aggregated GSI, Harvest, and age allocation results used for analyses.

datatable(GSI%>%left_join(AgeAllocation)%>%left_join(Harvest.Sum))
  
```

::: {style="margin-bottom:30px;"}
:::

```{r, echo=F, message=FALSE, warning=F, include=F}



# Apply stock comps of Kenai fish to commercial harvest but only after July 1
CommTR.0<-TRUnallocated%>%filter(Fate%in%"Commercial Harvest")%>%
  left_join(Comps)%>%
  mutate(Date=as.Date(Date,format="%m/%d/%Y"))%>%
  
  mutate(Condition=ifelse(Date<as.Date("2024-07-20",format="%Y-%m-%d") ,"yes","no"))%>%
  mutate(Composition=ifelse(Condition%in%"yes",Composition*.55,Composition))%>%
  
  mutate(Season.Total=Season.Total*Composition)%>%
  group_by(Date)%>%summarize(Total=sum(Season.Total,na.rm=T))%>%
  mutate(Fate="Commercial Harvest")

ALt.TR.0<-CommTR.0%>%select(-c(Total,Fate))%>%left_join(
TRUnallocated%>%mutate(Date=as.Date(Date,format="%m/%d/%Y"))%>%filter(!Fate%in%"Commercial Harvest")%>%group_by(Date)%>%summarize(Total=sum(Season.Total))%>%mutate(Fate="Other"))%>%
  rbind(CommTR.0)%>%group_by(Date)%>%summarize(Total=sum(Total))%>%mutate(Method="GSI Allocation")
  

# Bind to age allocation results
Inseason.Results<-read.csv(file("Data/Final.Inseason.Results.csv"))%>%filter(Stock%in%"Kenai")%>%group_by(Date)%>%summarize(Total=sum(UCI.Total))%>%mutate(Method="Age Allocation")%>%mutate(Date=as.Date(Date,format="%Y-%m-%d"))


Combined.0<-rbind(ALt.TR.0,Inseason.Results)

# Running projections
Test.1.0<-Timing%>%
  left_join(Combined.0)%>%
              mutate(Projection=Total/Timing)%>% #generating daily projection estimates
  filter(Date%in%"2024-07-23")%>% #Filtering to projection date
  ungroup()%>%
  select(Year, Method, Projection)%>%
  left_join(Timing)%>% #combining timing data to estimate daily total run estimates
  ungroup()%>%
  mutate(Daily=Timing*Projection)


Test.2.0<-Test.1.0%>%
  filter(Date<as.Date("2024-07-23", format="%Y-%m-%d"))%>%# Filter to the projection date
  left_join(Combined.0)%>%# Combining true counts
  group_by(Method,Year)%>%summarize(MAAPE=mean(maape(Total,Daily)))%>%
  group_by(Method)%>%slice_min(order_by=MAAPE,n=3)%>%select(Method,Year,MAAPE)



```

```{r, echo=F, message=FALSE, warning=F}
#| label: fig-Temporalcurve
#| fig-cap: Daily total run estimates by stock allocation method using 2024 data. The GSI allocaiton method assumes a 50% reduction in the Kenai contribution across all fisheries prior to July 20th.

Combined.0%>%
  filter(Date<as.Date("2024-07-24", format="%Y-%m-%d"))%>%
  ggplot()+
  geom_line(aes(Date,Total, color=Method), size=1, alpha=.5)+
  scale_y_continuous(label=comma)+
  theme_bw()+
  ylab("Total run")+
  theme(text = element_text(family = "serif"))
  

```

::: {style="margin-bottom:20px;"}
:::

```{r, echo=F, message=FALSE, warning=F}
#| label: tbl-Temporaltable
#| tbl-cap: Projected total run estimates by stock allocation method using 2024 data. The GSI allocation method assumes a 50% reduction in Kenai contribution across all fisheries prior to July 20th.


Test.2.0%>%
  left_join(Test.1.0%>%filter(Date%in%"2024-07-23")%>%select(Method,Year,Projection))%>%
  mutate(Inv.Weight=1/MAAPE)%>%group_by(Method)%>%
  mutate(Weight=Inv.Weight/sum(Inv.Weight),Weighted.Projection=Projection*Weight,Total=sum(Weighted.Projection))%>%
  select(-Inv.Weight)%>%
  mutate(Year=as.factor(Year))%>%
  flextable()%>%
  line_spacing(space = 1)%>%
  theme_apa()%>%
  merge_v(j=c(1,7))%>%
  valign(valign = "top", j=1)%>%
  valign(valign = "bottom", j=7)%>%
  hline(i=3)%>%
  set_header_labels(Weighted.Projection="Weighted Projection")%>%
  line_spacing(space=1)%>%
  autofit()


```

::: {style="margin-bottom:20px;"}
:::

```{r, echo=F, message=FALSE, warning=F}
#| label: fig-Temporalselect
#| fig-cap: Projected cumulative total run estimates for the top three selected run timing models (black lines) for each stock allocation method relative to the observed cumulative total run derived from each allocation method using 2024 data. The GSI allocation method assumes a 50% reduction in Kenai GSI estimates prior to July 20th.

Test.1.0%>%
  left_join(Test.2.0%>%mutate(Select=Year))%>%
  left_join(Combined.0%>%
              filter(Date<as.Date("2024-07-23", format="%Y-%m-%d")))%>%# Combining true counts
  ggplot()+
  geom_line(aes(Date,Daily,group=Year),size=1.5)+
  facet_grid(Method~.,scales = "free")+
  gghighlight(Year==Select ,calculate_per_facet = TRUE, use_direct_label = FALSE,
              unhighlighted_params = list(linewidth = 1, colour = alpha("grey", 0.7)))+
  geom_line(aes(Date,Total),color=2,size=1.5)+
  theme_bw()+
  scale_y_continuous(label=comma)+
  ylab("Total Run Size")+
  theme(text = element_text(family = "serif"))

```
